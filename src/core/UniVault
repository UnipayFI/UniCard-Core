pragma solidity ^0.8.0;

import {IERC20} from "@openzeppelin/contracts/token/ERC20/IERC20.sol";
import {SafeERC20} from "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol";
import {ReentrancyGuard} from "@openzeppelin/contracts/utils/ReentrancyGuard.sol";
import {Pausable} from "@openzeppelin/contracts/utils/Pausable.sol";

import {Errors} from "../libraries/Errors.sol";
import {IUniVault} from "../interfaces/IUniVault.sol";

contract UniVault is ReentrancyGuard, Pausable, IUniVault {
    using SafeERC20 for IERC20;

    uint256 public constant INTEREST_RATE_PRECISION = 1e6;
    address public paymentToken;
    mapping(address => bytes32) public userCommitment;
    mapping(address => bool) public isController;
    mapping(address => CardInfo[]) public userCards;
}