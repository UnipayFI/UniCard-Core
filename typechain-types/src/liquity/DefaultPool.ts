/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export interface DefaultPoolInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "NAME"
      | "activePoolAddress"
      | "collToken"
      | "decreaseBoldDebt"
      | "getBoldDebt"
      | "getCollBalance"
      | "increaseBoldDebt"
      | "receiveColl"
      | "sendCollToActivePool"
      | "troveManagerAddress"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "ActivePoolAddressChanged"
      | "CollTokenAddressChanged"
      | "DefaultPoolBoldDebtUpdated"
      | "DefaultPoolCollBalanceUpdated"
      | "EtherSent"
      | "TroveManagerAddressChanged"
  ): EventFragment;

  encodeFunctionData(functionFragment: "NAME", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "activePoolAddress",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "collToken", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "decreaseBoldDebt",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getBoldDebt",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCollBalance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "increaseBoldDebt",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "receiveColl",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "sendCollToActivePool",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "troveManagerAddress",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "NAME", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "activePoolAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "collToken", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "decreaseBoldDebt",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBoldDebt",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseBoldDebt",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "receiveColl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "sendCollToActivePool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "troveManagerAddress",
    data: BytesLike
  ): Result;
}

export namespace ActivePoolAddressChangedEvent {
  export type InputTuple = [_newActivePoolAddress: AddressLike];
  export type OutputTuple = [_newActivePoolAddress: string];
  export interface OutputObject {
    _newActivePoolAddress: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace CollTokenAddressChangedEvent {
  export type InputTuple = [_newCollTokenAddress: AddressLike];
  export type OutputTuple = [_newCollTokenAddress: string];
  export interface OutputObject {
    _newCollTokenAddress: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DefaultPoolBoldDebtUpdatedEvent {
  export type InputTuple = [_boldDebt: BigNumberish];
  export type OutputTuple = [_boldDebt: bigint];
  export interface OutputObject {
    _boldDebt: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DefaultPoolCollBalanceUpdatedEvent {
  export type InputTuple = [_collBalance: BigNumberish];
  export type OutputTuple = [_collBalance: bigint];
  export interface OutputObject {
    _collBalance: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EtherSentEvent {
  export type InputTuple = [_to: AddressLike, _amount: BigNumberish];
  export type OutputTuple = [_to: string, _amount: bigint];
  export interface OutputObject {
    _to: string;
    _amount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TroveManagerAddressChangedEvent {
  export type InputTuple = [_newTroveManagerAddress: AddressLike];
  export type OutputTuple = [_newTroveManagerAddress: string];
  export interface OutputObject {
    _newTroveManagerAddress: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface DefaultPool extends BaseContract {
  connect(runner?: ContractRunner | null): DefaultPool;
  waitForDeployment(): Promise<this>;

  interface: DefaultPoolInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  NAME: TypedContractMethod<[], [string], "view">;

  activePoolAddress: TypedContractMethod<[], [string], "view">;

  collToken: TypedContractMethod<[], [string], "view">;

  decreaseBoldDebt: TypedContractMethod<
    [_amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  getBoldDebt: TypedContractMethod<[], [bigint], "view">;

  getCollBalance: TypedContractMethod<[], [bigint], "view">;

  increaseBoldDebt: TypedContractMethod<
    [_amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  receiveColl: TypedContractMethod<
    [_amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  sendCollToActivePool: TypedContractMethod<
    [_amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  troveManagerAddress: TypedContractMethod<[], [string], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "NAME"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "activePoolAddress"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "collToken"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "decreaseBoldDebt"
  ): TypedContractMethod<[_amount: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "getBoldDebt"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getCollBalance"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "increaseBoldDebt"
  ): TypedContractMethod<[_amount: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "receiveColl"
  ): TypedContractMethod<[_amount: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "sendCollToActivePool"
  ): TypedContractMethod<[_amount: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "troveManagerAddress"
  ): TypedContractMethod<[], [string], "view">;

  getEvent(
    key: "ActivePoolAddressChanged"
  ): TypedContractEvent<
    ActivePoolAddressChangedEvent.InputTuple,
    ActivePoolAddressChangedEvent.OutputTuple,
    ActivePoolAddressChangedEvent.OutputObject
  >;
  getEvent(
    key: "CollTokenAddressChanged"
  ): TypedContractEvent<
    CollTokenAddressChangedEvent.InputTuple,
    CollTokenAddressChangedEvent.OutputTuple,
    CollTokenAddressChangedEvent.OutputObject
  >;
  getEvent(
    key: "DefaultPoolBoldDebtUpdated"
  ): TypedContractEvent<
    DefaultPoolBoldDebtUpdatedEvent.InputTuple,
    DefaultPoolBoldDebtUpdatedEvent.OutputTuple,
    DefaultPoolBoldDebtUpdatedEvent.OutputObject
  >;
  getEvent(
    key: "DefaultPoolCollBalanceUpdated"
  ): TypedContractEvent<
    DefaultPoolCollBalanceUpdatedEvent.InputTuple,
    DefaultPoolCollBalanceUpdatedEvent.OutputTuple,
    DefaultPoolCollBalanceUpdatedEvent.OutputObject
  >;
  getEvent(
    key: "EtherSent"
  ): TypedContractEvent<
    EtherSentEvent.InputTuple,
    EtherSentEvent.OutputTuple,
    EtherSentEvent.OutputObject
  >;
  getEvent(
    key: "TroveManagerAddressChanged"
  ): TypedContractEvent<
    TroveManagerAddressChangedEvent.InputTuple,
    TroveManagerAddressChangedEvent.OutputTuple,
    TroveManagerAddressChangedEvent.OutputObject
  >;

  filters: {
    "ActivePoolAddressChanged(address)": TypedContractEvent<
      ActivePoolAddressChangedEvent.InputTuple,
      ActivePoolAddressChangedEvent.OutputTuple,
      ActivePoolAddressChangedEvent.OutputObject
    >;
    ActivePoolAddressChanged: TypedContractEvent<
      ActivePoolAddressChangedEvent.InputTuple,
      ActivePoolAddressChangedEvent.OutputTuple,
      ActivePoolAddressChangedEvent.OutputObject
    >;

    "CollTokenAddressChanged(address)": TypedContractEvent<
      CollTokenAddressChangedEvent.InputTuple,
      CollTokenAddressChangedEvent.OutputTuple,
      CollTokenAddressChangedEvent.OutputObject
    >;
    CollTokenAddressChanged: TypedContractEvent<
      CollTokenAddressChangedEvent.InputTuple,
      CollTokenAddressChangedEvent.OutputTuple,
      CollTokenAddressChangedEvent.OutputObject
    >;

    "DefaultPoolBoldDebtUpdated(uint256)": TypedContractEvent<
      DefaultPoolBoldDebtUpdatedEvent.InputTuple,
      DefaultPoolBoldDebtUpdatedEvent.OutputTuple,
      DefaultPoolBoldDebtUpdatedEvent.OutputObject
    >;
    DefaultPoolBoldDebtUpdated: TypedContractEvent<
      DefaultPoolBoldDebtUpdatedEvent.InputTuple,
      DefaultPoolBoldDebtUpdatedEvent.OutputTuple,
      DefaultPoolBoldDebtUpdatedEvent.OutputObject
    >;

    "DefaultPoolCollBalanceUpdated(uint256)": TypedContractEvent<
      DefaultPoolCollBalanceUpdatedEvent.InputTuple,
      DefaultPoolCollBalanceUpdatedEvent.OutputTuple,
      DefaultPoolCollBalanceUpdatedEvent.OutputObject
    >;
    DefaultPoolCollBalanceUpdated: TypedContractEvent<
      DefaultPoolCollBalanceUpdatedEvent.InputTuple,
      DefaultPoolCollBalanceUpdatedEvent.OutputTuple,
      DefaultPoolCollBalanceUpdatedEvent.OutputObject
    >;

    "EtherSent(address,uint256)": TypedContractEvent<
      EtherSentEvent.InputTuple,
      EtherSentEvent.OutputTuple,
      EtherSentEvent.OutputObject
    >;
    EtherSent: TypedContractEvent<
      EtherSentEvent.InputTuple,
      EtherSentEvent.OutputTuple,
      EtherSentEvent.OutputObject
    >;

    "TroveManagerAddressChanged(address)": TypedContractEvent<
      TroveManagerAddressChangedEvent.InputTuple,
      TroveManagerAddressChangedEvent.OutputTuple,
      TroveManagerAddressChangedEvent.OutputObject
    >;
    TroveManagerAddressChanged: TypedContractEvent<
      TroveManagerAddressChangedEvent.InputTuple,
      TroveManagerAddressChangedEvent.OutputTuple,
      TroveManagerAddressChangedEvent.OutputObject
    >;
  };
}
