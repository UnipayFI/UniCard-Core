/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export type TroveChangeStruct = {
  appliedRedistBoldDebtGain: BigNumberish;
  appliedRedistCollGain: BigNumberish;
  collIncrease: BigNumberish;
  collDecrease: BigNumberish;
  debtIncrease: BigNumberish;
  debtDecrease: BigNumberish;
  newWeightedRecordedDebt: BigNumberish;
  oldWeightedRecordedDebt: BigNumberish;
  upfrontFee: BigNumberish;
  batchAccruedManagementFee: BigNumberish;
  newWeightedRecordedBatchManagementFee: BigNumberish;
  oldWeightedRecordedBatchManagementFee: BigNumberish;
};

export type TroveChangeStructOutput = [
  appliedRedistBoldDebtGain: bigint,
  appliedRedistCollGain: bigint,
  collIncrease: bigint,
  collDecrease: bigint,
  debtIncrease: bigint,
  debtDecrease: bigint,
  newWeightedRecordedDebt: bigint,
  oldWeightedRecordedDebt: bigint,
  upfrontFee: bigint,
  batchAccruedManagementFee: bigint,
  newWeightedRecordedBatchManagementFee: bigint,
  oldWeightedRecordedBatchManagementFee: bigint
] & {
  appliedRedistBoldDebtGain: bigint;
  appliedRedistCollGain: bigint;
  collIncrease: bigint;
  collDecrease: bigint;
  debtIncrease: bigint;
  debtDecrease: bigint;
  newWeightedRecordedDebt: bigint;
  oldWeightedRecordedDebt: bigint;
  upfrontFee: bigint;
  batchAccruedManagementFee: bigint;
  newWeightedRecordedBatchManagementFee: bigint;
  oldWeightedRecordedBatchManagementFee: bigint;
};

export interface ActivePoolInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "NAME"
      | "accountForReceivedColl"
      | "aggBatchManagementFees"
      | "aggRecordedDebt"
      | "aggWeightedBatchManagementFeeSum"
      | "aggWeightedDebtSum"
      | "borrowerOperationsAddress"
      | "calcPendingAggBatchManagementFee"
      | "calcPendingAggInterest"
      | "calcPendingSPYield"
      | "collToken"
      | "defaultPoolAddress"
      | "getBoldDebt"
      | "getCollBalance"
      | "getNewApproxAvgInterestRateFromTroveChange"
      | "hasBeenShutDown"
      | "interestRouter"
      | "lastAggBatchManagementFeesUpdateTime"
      | "lastAggUpdateTime"
      | "mintAggInterest"
      | "mintAggInterestAndAccountForTroveChange"
      | "mintBatchManagementFeeAndAccountForChange"
      | "receiveColl"
      | "sendColl"
      | "sendCollToDefaultPool"
      | "setShutdownFlag"
      | "shutdownTime"
      | "stabilityPool"
      | "troveManagerAddress"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "ActivePoolBoldDebtUpdated"
      | "ActivePoolCollBalanceUpdated"
      | "BorrowerOperationsAddressChanged"
      | "CollTokenAddressChanged"
      | "DefaultPoolAddressChanged"
      | "EtherSent"
      | "StabilityPoolAddressChanged"
      | "TroveManagerAddressChanged"
  ): EventFragment;

  encodeFunctionData(functionFragment: "NAME", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "accountForReceivedColl",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "aggBatchManagementFees",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "aggRecordedDebt",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "aggWeightedBatchManagementFeeSum",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "aggWeightedDebtSum",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "borrowerOperationsAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "calcPendingAggBatchManagementFee",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "calcPendingAggInterest",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "calcPendingSPYield",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "collToken", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "defaultPoolAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBoldDebt",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCollBalance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNewApproxAvgInterestRateFromTroveChange",
    values: [TroveChangeStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "hasBeenShutDown",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "interestRouter",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "lastAggBatchManagementFeesUpdateTime",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "lastAggUpdateTime",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "mintAggInterest",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "mintAggInterestAndAccountForTroveChange",
    values: [TroveChangeStruct, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "mintBatchManagementFeeAndAccountForChange",
    values: [TroveChangeStruct, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "receiveColl",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "sendColl",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "sendCollToDefaultPool",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setShutdownFlag",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "shutdownTime",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "stabilityPool",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "troveManagerAddress",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "NAME", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "accountForReceivedColl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "aggBatchManagementFees",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "aggRecordedDebt",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "aggWeightedBatchManagementFeeSum",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "aggWeightedDebtSum",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "borrowerOperationsAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "calcPendingAggBatchManagementFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "calcPendingAggInterest",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "calcPendingSPYield",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "collToken", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "defaultPoolAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBoldDebt",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCollBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNewApproxAvgInterestRateFromTroveChange",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasBeenShutDown",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "interestRouter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "lastAggBatchManagementFeesUpdateTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "lastAggUpdateTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mintAggInterest",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mintAggInterestAndAccountForTroveChange",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mintBatchManagementFeeAndAccountForChange",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "receiveColl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "sendColl", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "sendCollToDefaultPool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setShutdownFlag",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "shutdownTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stabilityPool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "troveManagerAddress",
    data: BytesLike
  ): Result;
}

export namespace ActivePoolBoldDebtUpdatedEvent {
  export type InputTuple = [_recordedDebtSum: BigNumberish];
  export type OutputTuple = [_recordedDebtSum: bigint];
  export interface OutputObject {
    _recordedDebtSum: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ActivePoolCollBalanceUpdatedEvent {
  export type InputTuple = [_collBalance: BigNumberish];
  export type OutputTuple = [_collBalance: bigint];
  export interface OutputObject {
    _collBalance: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BorrowerOperationsAddressChangedEvent {
  export type InputTuple = [_newBorrowerOperationsAddress: AddressLike];
  export type OutputTuple = [_newBorrowerOperationsAddress: string];
  export interface OutputObject {
    _newBorrowerOperationsAddress: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace CollTokenAddressChangedEvent {
  export type InputTuple = [_newCollTokenAddress: AddressLike];
  export type OutputTuple = [_newCollTokenAddress: string];
  export interface OutputObject {
    _newCollTokenAddress: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DefaultPoolAddressChangedEvent {
  export type InputTuple = [_newDefaultPoolAddress: AddressLike];
  export type OutputTuple = [_newDefaultPoolAddress: string];
  export interface OutputObject {
    _newDefaultPoolAddress: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EtherSentEvent {
  export type InputTuple = [_to: AddressLike, _amount: BigNumberish];
  export type OutputTuple = [_to: string, _amount: bigint];
  export interface OutputObject {
    _to: string;
    _amount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace StabilityPoolAddressChangedEvent {
  export type InputTuple = [_newStabilityPoolAddress: AddressLike];
  export type OutputTuple = [_newStabilityPoolAddress: string];
  export interface OutputObject {
    _newStabilityPoolAddress: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TroveManagerAddressChangedEvent {
  export type InputTuple = [_newTroveManagerAddress: AddressLike];
  export type OutputTuple = [_newTroveManagerAddress: string];
  export interface OutputObject {
    _newTroveManagerAddress: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface ActivePool extends BaseContract {
  connect(runner?: ContractRunner | null): ActivePool;
  waitForDeployment(): Promise<this>;

  interface: ActivePoolInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  NAME: TypedContractMethod<[], [string], "view">;

  accountForReceivedColl: TypedContractMethod<
    [_amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  aggBatchManagementFees: TypedContractMethod<[], [bigint], "view">;

  aggRecordedDebt: TypedContractMethod<[], [bigint], "view">;

  aggWeightedBatchManagementFeeSum: TypedContractMethod<[], [bigint], "view">;

  aggWeightedDebtSum: TypedContractMethod<[], [bigint], "view">;

  borrowerOperationsAddress: TypedContractMethod<[], [string], "view">;

  calcPendingAggBatchManagementFee: TypedContractMethod<[], [bigint], "view">;

  calcPendingAggInterest: TypedContractMethod<[], [bigint], "view">;

  calcPendingSPYield: TypedContractMethod<[], [bigint], "view">;

  collToken: TypedContractMethod<[], [string], "view">;

  defaultPoolAddress: TypedContractMethod<[], [string], "view">;

  getBoldDebt: TypedContractMethod<[], [bigint], "view">;

  getCollBalance: TypedContractMethod<[], [bigint], "view">;

  getNewApproxAvgInterestRateFromTroveChange: TypedContractMethod<
    [_troveChange: TroveChangeStruct],
    [bigint],
    "view"
  >;

  hasBeenShutDown: TypedContractMethod<[], [boolean], "view">;

  interestRouter: TypedContractMethod<[], [string], "view">;

  lastAggBatchManagementFeesUpdateTime: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  lastAggUpdateTime: TypedContractMethod<[], [bigint], "view">;

  mintAggInterest: TypedContractMethod<[], [void], "nonpayable">;

  mintAggInterestAndAccountForTroveChange: TypedContractMethod<
    [_troveChange: TroveChangeStruct, _batchAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  mintBatchManagementFeeAndAccountForChange: TypedContractMethod<
    [_troveChange: TroveChangeStruct, _batchAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  receiveColl: TypedContractMethod<
    [_amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  sendColl: TypedContractMethod<
    [_account: AddressLike, _amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  sendCollToDefaultPool: TypedContractMethod<
    [_amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  setShutdownFlag: TypedContractMethod<[], [void], "nonpayable">;

  shutdownTime: TypedContractMethod<[], [bigint], "view">;

  stabilityPool: TypedContractMethod<[], [string], "view">;

  troveManagerAddress: TypedContractMethod<[], [string], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "NAME"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "accountForReceivedColl"
  ): TypedContractMethod<[_amount: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "aggBatchManagementFees"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "aggRecordedDebt"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "aggWeightedBatchManagementFeeSum"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "aggWeightedDebtSum"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "borrowerOperationsAddress"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "calcPendingAggBatchManagementFee"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "calcPendingAggInterest"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "calcPendingSPYield"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "collToken"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "defaultPoolAddress"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getBoldDebt"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getCollBalance"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getNewApproxAvgInterestRateFromTroveChange"
  ): TypedContractMethod<[_troveChange: TroveChangeStruct], [bigint], "view">;
  getFunction(
    nameOrSignature: "hasBeenShutDown"
  ): TypedContractMethod<[], [boolean], "view">;
  getFunction(
    nameOrSignature: "interestRouter"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "lastAggBatchManagementFeesUpdateTime"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "lastAggUpdateTime"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "mintAggInterest"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "mintAggInterestAndAccountForTroveChange"
  ): TypedContractMethod<
    [_troveChange: TroveChangeStruct, _batchAddress: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "mintBatchManagementFeeAndAccountForChange"
  ): TypedContractMethod<
    [_troveChange: TroveChangeStruct, _batchAddress: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "receiveColl"
  ): TypedContractMethod<[_amount: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "sendColl"
  ): TypedContractMethod<
    [_account: AddressLike, _amount: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "sendCollToDefaultPool"
  ): TypedContractMethod<[_amount: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setShutdownFlag"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "shutdownTime"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "stabilityPool"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "troveManagerAddress"
  ): TypedContractMethod<[], [string], "view">;

  getEvent(
    key: "ActivePoolBoldDebtUpdated"
  ): TypedContractEvent<
    ActivePoolBoldDebtUpdatedEvent.InputTuple,
    ActivePoolBoldDebtUpdatedEvent.OutputTuple,
    ActivePoolBoldDebtUpdatedEvent.OutputObject
  >;
  getEvent(
    key: "ActivePoolCollBalanceUpdated"
  ): TypedContractEvent<
    ActivePoolCollBalanceUpdatedEvent.InputTuple,
    ActivePoolCollBalanceUpdatedEvent.OutputTuple,
    ActivePoolCollBalanceUpdatedEvent.OutputObject
  >;
  getEvent(
    key: "BorrowerOperationsAddressChanged"
  ): TypedContractEvent<
    BorrowerOperationsAddressChangedEvent.InputTuple,
    BorrowerOperationsAddressChangedEvent.OutputTuple,
    BorrowerOperationsAddressChangedEvent.OutputObject
  >;
  getEvent(
    key: "CollTokenAddressChanged"
  ): TypedContractEvent<
    CollTokenAddressChangedEvent.InputTuple,
    CollTokenAddressChangedEvent.OutputTuple,
    CollTokenAddressChangedEvent.OutputObject
  >;
  getEvent(
    key: "DefaultPoolAddressChanged"
  ): TypedContractEvent<
    DefaultPoolAddressChangedEvent.InputTuple,
    DefaultPoolAddressChangedEvent.OutputTuple,
    DefaultPoolAddressChangedEvent.OutputObject
  >;
  getEvent(
    key: "EtherSent"
  ): TypedContractEvent<
    EtherSentEvent.InputTuple,
    EtherSentEvent.OutputTuple,
    EtherSentEvent.OutputObject
  >;
  getEvent(
    key: "StabilityPoolAddressChanged"
  ): TypedContractEvent<
    StabilityPoolAddressChangedEvent.InputTuple,
    StabilityPoolAddressChangedEvent.OutputTuple,
    StabilityPoolAddressChangedEvent.OutputObject
  >;
  getEvent(
    key: "TroveManagerAddressChanged"
  ): TypedContractEvent<
    TroveManagerAddressChangedEvent.InputTuple,
    TroveManagerAddressChangedEvent.OutputTuple,
    TroveManagerAddressChangedEvent.OutputObject
  >;

  filters: {
    "ActivePoolBoldDebtUpdated(uint256)": TypedContractEvent<
      ActivePoolBoldDebtUpdatedEvent.InputTuple,
      ActivePoolBoldDebtUpdatedEvent.OutputTuple,
      ActivePoolBoldDebtUpdatedEvent.OutputObject
    >;
    ActivePoolBoldDebtUpdated: TypedContractEvent<
      ActivePoolBoldDebtUpdatedEvent.InputTuple,
      ActivePoolBoldDebtUpdatedEvent.OutputTuple,
      ActivePoolBoldDebtUpdatedEvent.OutputObject
    >;

    "ActivePoolCollBalanceUpdated(uint256)": TypedContractEvent<
      ActivePoolCollBalanceUpdatedEvent.InputTuple,
      ActivePoolCollBalanceUpdatedEvent.OutputTuple,
      ActivePoolCollBalanceUpdatedEvent.OutputObject
    >;
    ActivePoolCollBalanceUpdated: TypedContractEvent<
      ActivePoolCollBalanceUpdatedEvent.InputTuple,
      ActivePoolCollBalanceUpdatedEvent.OutputTuple,
      ActivePoolCollBalanceUpdatedEvent.OutputObject
    >;

    "BorrowerOperationsAddressChanged(address)": TypedContractEvent<
      BorrowerOperationsAddressChangedEvent.InputTuple,
      BorrowerOperationsAddressChangedEvent.OutputTuple,
      BorrowerOperationsAddressChangedEvent.OutputObject
    >;
    BorrowerOperationsAddressChanged: TypedContractEvent<
      BorrowerOperationsAddressChangedEvent.InputTuple,
      BorrowerOperationsAddressChangedEvent.OutputTuple,
      BorrowerOperationsAddressChangedEvent.OutputObject
    >;

    "CollTokenAddressChanged(address)": TypedContractEvent<
      CollTokenAddressChangedEvent.InputTuple,
      CollTokenAddressChangedEvent.OutputTuple,
      CollTokenAddressChangedEvent.OutputObject
    >;
    CollTokenAddressChanged: TypedContractEvent<
      CollTokenAddressChangedEvent.InputTuple,
      CollTokenAddressChangedEvent.OutputTuple,
      CollTokenAddressChangedEvent.OutputObject
    >;

    "DefaultPoolAddressChanged(address)": TypedContractEvent<
      DefaultPoolAddressChangedEvent.InputTuple,
      DefaultPoolAddressChangedEvent.OutputTuple,
      DefaultPoolAddressChangedEvent.OutputObject
    >;
    DefaultPoolAddressChanged: TypedContractEvent<
      DefaultPoolAddressChangedEvent.InputTuple,
      DefaultPoolAddressChangedEvent.OutputTuple,
      DefaultPoolAddressChangedEvent.OutputObject
    >;

    "EtherSent(address,uint256)": TypedContractEvent<
      EtherSentEvent.InputTuple,
      EtherSentEvent.OutputTuple,
      EtherSentEvent.OutputObject
    >;
    EtherSent: TypedContractEvent<
      EtherSentEvent.InputTuple,
      EtherSentEvent.OutputTuple,
      EtherSentEvent.OutputObject
    >;

    "StabilityPoolAddressChanged(address)": TypedContractEvent<
      StabilityPoolAddressChangedEvent.InputTuple,
      StabilityPoolAddressChangedEvent.OutputTuple,
      StabilityPoolAddressChangedEvent.OutputObject
    >;
    StabilityPoolAddressChanged: TypedContractEvent<
      StabilityPoolAddressChangedEvent.InputTuple,
      StabilityPoolAddressChangedEvent.OutputTuple,
      StabilityPoolAddressChangedEvent.OutputObject
    >;

    "TroveManagerAddressChanged(address)": TypedContractEvent<
      TroveManagerAddressChangedEvent.InputTuple,
      TroveManagerAddressChangedEvent.OutputTuple,
      TroveManagerAddressChangedEvent.OutputObject
    >;
    TroveManagerAddressChanged: TypedContractEvent<
      TroveManagerAddressChangedEvent.InputTuple,
      TroveManagerAddressChangedEvent.OutputTuple,
      TroveManagerAddressChangedEvent.OutputObject
    >;
  };
}
