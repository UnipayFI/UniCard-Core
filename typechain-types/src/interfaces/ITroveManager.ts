/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export type LatestBatchDataStruct = {
  entireDebtWithoutRedistribution: BigNumberish;
  entireCollWithoutRedistribution: BigNumberish;
  accruedInterest: BigNumberish;
  recordedDebt: BigNumberish;
  annualInterestRate: BigNumberish;
  weightedRecordedDebt: BigNumberish;
  annualManagementFee: BigNumberish;
  accruedManagementFee: BigNumberish;
  weightedRecordedBatchManagementFee: BigNumberish;
  lastDebtUpdateTime: BigNumberish;
  lastInterestRateAdjTime: BigNumberish;
};

export type LatestBatchDataStructOutput = [
  entireDebtWithoutRedistribution: bigint,
  entireCollWithoutRedistribution: bigint,
  accruedInterest: bigint,
  recordedDebt: bigint,
  annualInterestRate: bigint,
  weightedRecordedDebt: bigint,
  annualManagementFee: bigint,
  accruedManagementFee: bigint,
  weightedRecordedBatchManagementFee: bigint,
  lastDebtUpdateTime: bigint,
  lastInterestRateAdjTime: bigint
] & {
  entireDebtWithoutRedistribution: bigint;
  entireCollWithoutRedistribution: bigint;
  accruedInterest: bigint;
  recordedDebt: bigint;
  annualInterestRate: bigint;
  weightedRecordedDebt: bigint;
  annualManagementFee: bigint;
  accruedManagementFee: bigint;
  weightedRecordedBatchManagementFee: bigint;
  lastDebtUpdateTime: bigint;
  lastInterestRateAdjTime: bigint;
};

export type LatestTroveDataStruct = {
  entireDebt: BigNumberish;
  entireColl: BigNumberish;
  redistBoldDebtGain: BigNumberish;
  redistCollGain: BigNumberish;
  accruedInterest: BigNumberish;
  recordedDebt: BigNumberish;
  annualInterestRate: BigNumberish;
  weightedRecordedDebt: BigNumberish;
  accruedBatchManagementFee: BigNumberish;
  lastInterestRateAdjTime: BigNumberish;
};

export type LatestTroveDataStructOutput = [
  entireDebt: bigint,
  entireColl: bigint,
  redistBoldDebtGain: bigint,
  redistCollGain: bigint,
  accruedInterest: bigint,
  recordedDebt: bigint,
  annualInterestRate: bigint,
  weightedRecordedDebt: bigint,
  accruedBatchManagementFee: bigint,
  lastInterestRateAdjTime: bigint
] & {
  entireDebt: bigint;
  entireColl: bigint;
  redistBoldDebtGain: bigint;
  redistCollGain: bigint;
  accruedInterest: bigint;
  recordedDebt: bigint;
  annualInterestRate: bigint;
  weightedRecordedDebt: bigint;
  accruedBatchManagementFee: bigint;
  lastInterestRateAdjTime: bigint;
};

export type TroveChangeStruct = {
  appliedRedistBoldDebtGain: BigNumberish;
  appliedRedistCollGain: BigNumberish;
  collIncrease: BigNumberish;
  collDecrease: BigNumberish;
  debtIncrease: BigNumberish;
  debtDecrease: BigNumberish;
  newWeightedRecordedDebt: BigNumberish;
  oldWeightedRecordedDebt: BigNumberish;
  upfrontFee: BigNumberish;
  batchAccruedManagementFee: BigNumberish;
  newWeightedRecordedBatchManagementFee: BigNumberish;
  oldWeightedRecordedBatchManagementFee: BigNumberish;
};

export type TroveChangeStructOutput = [
  appliedRedistBoldDebtGain: bigint,
  appliedRedistCollGain: bigint,
  collIncrease: bigint,
  collDecrease: bigint,
  debtIncrease: bigint,
  debtDecrease: bigint,
  newWeightedRecordedDebt: bigint,
  oldWeightedRecordedDebt: bigint,
  upfrontFee: bigint,
  batchAccruedManagementFee: bigint,
  newWeightedRecordedBatchManagementFee: bigint,
  oldWeightedRecordedBatchManagementFee: bigint
] & {
  appliedRedistBoldDebtGain: bigint;
  appliedRedistCollGain: bigint;
  collIncrease: bigint;
  collDecrease: bigint;
  debtIncrease: bigint;
  debtDecrease: bigint;
  newWeightedRecordedDebt: bigint;
  oldWeightedRecordedDebt: bigint;
  upfrontFee: bigint;
  batchAccruedManagementFee: bigint;
  newWeightedRecordedBatchManagementFee: bigint;
  oldWeightedRecordedBatchManagementFee: bigint;
};

export declare namespace ITroveManager {
  export type OnSetInterestBatchManagerParamsStruct = {
    troveId: BigNumberish;
    troveColl: BigNumberish;
    troveDebt: BigNumberish;
    troveChange: TroveChangeStruct;
    newBatchAddress: AddressLike;
    newBatchColl: BigNumberish;
    newBatchDebt: BigNumberish;
  };

  export type OnSetInterestBatchManagerParamsStructOutput = [
    troveId: bigint,
    troveColl: bigint,
    troveDebt: bigint,
    troveChange: TroveChangeStructOutput,
    newBatchAddress: string,
    newBatchColl: bigint,
    newBatchDebt: bigint
  ] & {
    troveId: bigint;
    troveColl: bigint;
    troveDebt: bigint;
    troveChange: TroveChangeStructOutput;
    newBatchAddress: string;
    newBatchColl: bigint;
    newBatchDebt: bigint;
  };
}

export interface ITroveManagerInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "Troves"
      | "activePool"
      | "batchLiquidateTroves"
      | "borrowerOperations"
      | "getCurrentICR"
      | "getEntireSystemColl"
      | "getEntireSystemDebt"
      | "getLatestBatchData"
      | "getLatestTroveData"
      | "getTroveAnnualInterestRate"
      | "getTroveFromTroveIdsArray"
      | "getTroveIdsCount"
      | "getTroveStatus"
      | "getUnbackedPortionPriceAndRedeemability"
      | "onAdjustTrove"
      | "onAdjustTroveInsideBatch"
      | "onAdjustTroveInterestRate"
      | "onApplyTroveInterest"
      | "onCloseTrove"
      | "onLowerBatchManagerAnnualFee"
      | "onOpenTrove"
      | "onOpenTroveAndJoinBatch"
      | "onRegisterBatchManager"
      | "onRemoveFromBatch"
      | "onSetBatchManagerAnnualInterestRate"
      | "onSetInterestBatchManager"
      | "redeemCollateral"
      | "rewardSnapshots"
      | "setTroveStatusToActive"
      | "shutdown"
      | "shutdownTime"
      | "sortedTroves"
      | "stabilityPool"
      | "troveNFT"
      | "urgentRedemption"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "Troves",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "activePool",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "batchLiquidateTroves",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "borrowerOperations",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrentICR",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getEntireSystemColl",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getEntireSystemDebt",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLatestBatchData",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getLatestTroveData",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTroveAnnualInterestRate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTroveFromTroveIdsArray",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTroveIdsCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTroveStatus",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getUnbackedPortionPriceAndRedeemability",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "onAdjustTrove",
    values: [BigNumberish, BigNumberish, BigNumberish, TroveChangeStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "onAdjustTroveInsideBatch",
    values: [
      BigNumberish,
      BigNumberish,
      TroveChangeStruct,
      AddressLike,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "onAdjustTroveInterestRate",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      TroveChangeStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "onApplyTroveInterest",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      AddressLike,
      BigNumberish,
      BigNumberish,
      TroveChangeStruct
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "onCloseTrove",
    values: [
      BigNumberish,
      TroveChangeStruct,
      AddressLike,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "onLowerBatchManagerAnnualFee",
    values: [AddressLike, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "onOpenTrove",
    values: [AddressLike, BigNumberish, TroveChangeStruct, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "onOpenTroveAndJoinBatch",
    values: [
      AddressLike,
      BigNumberish,
      TroveChangeStruct,
      AddressLike,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "onRegisterBatchManager",
    values: [AddressLike, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "onRemoveFromBatch",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      TroveChangeStruct,
      AddressLike,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "onSetBatchManagerAnnualInterestRate",
    values: [
      AddressLike,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "onSetInterestBatchManager",
    values: [ITroveManager.OnSetInterestBatchManagerParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemCollateral",
    values: [
      AddressLike,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "rewardSnapshots",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setTroveStatusToActive",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "shutdown", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "shutdownTime",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "sortedTroves",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "stabilityPool",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "troveNFT", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "urgentRedemption",
    values: [BigNumberish, BigNumberish[], BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "Troves", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "activePool", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "batchLiquidateTroves",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "borrowerOperations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCurrentICR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEntireSystemColl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEntireSystemDebt",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLatestBatchData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLatestTroveData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTroveAnnualInterestRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTroveFromTroveIdsArray",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTroveIdsCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTroveStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUnbackedPortionPriceAndRedeemability",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onAdjustTrove",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onAdjustTroveInsideBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onAdjustTroveInterestRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onApplyTroveInterest",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onCloseTrove",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onLowerBatchManagerAnnualFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onOpenTrove",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onOpenTroveAndJoinBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onRegisterBatchManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onRemoveFromBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onSetBatchManagerAnnualInterestRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onSetInterestBatchManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rewardSnapshots",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTroveStatusToActive",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "shutdown", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "shutdownTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "sortedTroves",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stabilityPool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "troveNFT", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "urgentRedemption",
    data: BytesLike
  ): Result;
}

export interface ITroveManager extends BaseContract {
  connect(runner?: ContractRunner | null): ITroveManager;
  waitForDeployment(): Promise<this>;

  interface: ITroveManagerInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  Troves: TypedContractMethod<
    [_id: BigNumberish],
    [
      [
        bigint,
        bigint,
        bigint,
        bigint,
        bigint,
        bigint,
        bigint,
        bigint,
        string,
        bigint
      ] & {
        debt: bigint;
        coll: bigint;
        stake: bigint;
        status: bigint;
        arrayIndex: bigint;
        lastDebtUpdateTime: bigint;
        lastInterestRateAdjTime: bigint;
        annualInterestRate: bigint;
        interestBatchManager: string;
        batchDebtShares: bigint;
      }
    ],
    "view"
  >;

  activePool: TypedContractMethod<[], [string], "view">;

  batchLiquidateTroves: TypedContractMethod<
    [_troveArray: BigNumberish[]],
    [void],
    "nonpayable"
  >;

  borrowerOperations: TypedContractMethod<[], [string], "view">;

  getCurrentICR: TypedContractMethod<
    [_troveId: BigNumberish, _price: BigNumberish],
    [bigint],
    "view"
  >;

  getEntireSystemColl: TypedContractMethod<[], [bigint], "view">;

  getEntireSystemDebt: TypedContractMethod<[], [bigint], "view">;

  getLatestBatchData: TypedContractMethod<
    [_batchAddress: AddressLike],
    [LatestBatchDataStructOutput],
    "view"
  >;

  getLatestTroveData: TypedContractMethod<
    [_troveId: BigNumberish],
    [LatestTroveDataStructOutput],
    "view"
  >;

  getTroveAnnualInterestRate: TypedContractMethod<
    [_troveId: BigNumberish],
    [bigint],
    "view"
  >;

  getTroveFromTroveIdsArray: TypedContractMethod<
    [_index: BigNumberish],
    [bigint],
    "view"
  >;

  getTroveIdsCount: TypedContractMethod<[], [bigint], "view">;

  getTroveStatus: TypedContractMethod<
    [_troveId: BigNumberish],
    [bigint],
    "view"
  >;

  getUnbackedPortionPriceAndRedeemability: TypedContractMethod<
    [],
    [[bigint, bigint, boolean]],
    "nonpayable"
  >;

  onAdjustTrove: TypedContractMethod<
    [
      _troveId: BigNumberish,
      _newColl: BigNumberish,
      _newDebt: BigNumberish,
      _troveChange: TroveChangeStruct
    ],
    [void],
    "nonpayable"
  >;

  onAdjustTroveInsideBatch: TypedContractMethod<
    [
      _troveId: BigNumberish,
      _newTroveColl: BigNumberish,
      _troveChange: TroveChangeStruct,
      _batchAddress: AddressLike,
      _newBatchColl: BigNumberish,
      _newBatchDebt: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  onAdjustTroveInterestRate: TypedContractMethod<
    [
      _troveId: BigNumberish,
      _newColl: BigNumberish,
      _newDebt: BigNumberish,
      _newAnnualInterestRate: BigNumberish,
      _troveChange: TroveChangeStruct
    ],
    [void],
    "nonpayable"
  >;

  onApplyTroveInterest: TypedContractMethod<
    [
      _troveId: BigNumberish,
      _newTroveColl: BigNumberish,
      _newTroveDebt: BigNumberish,
      _batchAddress: AddressLike,
      _newBatchColl: BigNumberish,
      _newBatchDebt: BigNumberish,
      _troveChange: TroveChangeStruct
    ],
    [void],
    "nonpayable"
  >;

  onCloseTrove: TypedContractMethod<
    [
      _troveId: BigNumberish,
      _troveChange: TroveChangeStruct,
      _batchAddress: AddressLike,
      _newBatchColl: BigNumberish,
      _newBatchDebt: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  onLowerBatchManagerAnnualFee: TypedContractMethod<
    [
      _batchAddress: AddressLike,
      _newColl: BigNumberish,
      _newDebt: BigNumberish,
      _newAnnualManagementFee: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  onOpenTrove: TypedContractMethod<
    [
      _owner: AddressLike,
      _troveId: BigNumberish,
      _troveChange: TroveChangeStruct,
      _annualInterestRate: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  onOpenTroveAndJoinBatch: TypedContractMethod<
    [
      _owner: AddressLike,
      _troveId: BigNumberish,
      _troveChange: TroveChangeStruct,
      _batchAddress: AddressLike,
      _batchColl: BigNumberish,
      _batchDebt: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  onRegisterBatchManager: TypedContractMethod<
    [
      _batchAddress: AddressLike,
      _annualInterestRate: BigNumberish,
      _annualFee: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  onRemoveFromBatch: TypedContractMethod<
    [
      _troveId: BigNumberish,
      _newTroveColl: BigNumberish,
      _newTroveDebt: BigNumberish,
      _troveChange: TroveChangeStruct,
      _batchAddress: AddressLike,
      _newBatchColl: BigNumberish,
      _newBatchDebt: BigNumberish,
      _newAnnualInterestRate: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  onSetBatchManagerAnnualInterestRate: TypedContractMethod<
    [
      _batchAddress: AddressLike,
      _newColl: BigNumberish,
      _newDebt: BigNumberish,
      _newAnnualInterestRate: BigNumberish,
      _upfrontFee: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  onSetInterestBatchManager: TypedContractMethod<
    [_params: ITroveManager.OnSetInterestBatchManagerParamsStruct],
    [void],
    "nonpayable"
  >;

  redeemCollateral: TypedContractMethod<
    [
      _sender: AddressLike,
      _boldAmount: BigNumberish,
      _price: BigNumberish,
      _redemptionRate: BigNumberish,
      _maxIterations: BigNumberish
    ],
    [bigint],
    "nonpayable"
  >;

  rewardSnapshots: TypedContractMethod<
    [_id: BigNumberish],
    [[bigint, bigint] & { coll: bigint; boldDebt: bigint }],
    "view"
  >;

  setTroveStatusToActive: TypedContractMethod<
    [_troveId: BigNumberish],
    [void],
    "nonpayable"
  >;

  shutdown: TypedContractMethod<[], [void], "nonpayable">;

  shutdownTime: TypedContractMethod<[], [bigint], "view">;

  sortedTroves: TypedContractMethod<[], [string], "view">;

  stabilityPool: TypedContractMethod<[], [string], "view">;

  troveNFT: TypedContractMethod<[], [string], "view">;

  urgentRedemption: TypedContractMethod<
    [
      _boldAmount: BigNumberish,
      _troveIds: BigNumberish[],
      _minCollateral: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "Troves"
  ): TypedContractMethod<
    [_id: BigNumberish],
    [
      [
        bigint,
        bigint,
        bigint,
        bigint,
        bigint,
        bigint,
        bigint,
        bigint,
        string,
        bigint
      ] & {
        debt: bigint;
        coll: bigint;
        stake: bigint;
        status: bigint;
        arrayIndex: bigint;
        lastDebtUpdateTime: bigint;
        lastInterestRateAdjTime: bigint;
        annualInterestRate: bigint;
        interestBatchManager: string;
        batchDebtShares: bigint;
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "activePool"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "batchLiquidateTroves"
  ): TypedContractMethod<[_troveArray: BigNumberish[]], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "borrowerOperations"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getCurrentICR"
  ): TypedContractMethod<
    [_troveId: BigNumberish, _price: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "getEntireSystemColl"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getEntireSystemDebt"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getLatestBatchData"
  ): TypedContractMethod<
    [_batchAddress: AddressLike],
    [LatestBatchDataStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "getLatestTroveData"
  ): TypedContractMethod<
    [_troveId: BigNumberish],
    [LatestTroveDataStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "getTroveAnnualInterestRate"
  ): TypedContractMethod<[_troveId: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "getTroveFromTroveIdsArray"
  ): TypedContractMethod<[_index: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "getTroveIdsCount"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getTroveStatus"
  ): TypedContractMethod<[_troveId: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "getUnbackedPortionPriceAndRedeemability"
  ): TypedContractMethod<[], [[bigint, bigint, boolean]], "nonpayable">;
  getFunction(
    nameOrSignature: "onAdjustTrove"
  ): TypedContractMethod<
    [
      _troveId: BigNumberish,
      _newColl: BigNumberish,
      _newDebt: BigNumberish,
      _troveChange: TroveChangeStruct
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "onAdjustTroveInsideBatch"
  ): TypedContractMethod<
    [
      _troveId: BigNumberish,
      _newTroveColl: BigNumberish,
      _troveChange: TroveChangeStruct,
      _batchAddress: AddressLike,
      _newBatchColl: BigNumberish,
      _newBatchDebt: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "onAdjustTroveInterestRate"
  ): TypedContractMethod<
    [
      _troveId: BigNumberish,
      _newColl: BigNumberish,
      _newDebt: BigNumberish,
      _newAnnualInterestRate: BigNumberish,
      _troveChange: TroveChangeStruct
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "onApplyTroveInterest"
  ): TypedContractMethod<
    [
      _troveId: BigNumberish,
      _newTroveColl: BigNumberish,
      _newTroveDebt: BigNumberish,
      _batchAddress: AddressLike,
      _newBatchColl: BigNumberish,
      _newBatchDebt: BigNumberish,
      _troveChange: TroveChangeStruct
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "onCloseTrove"
  ): TypedContractMethod<
    [
      _troveId: BigNumberish,
      _troveChange: TroveChangeStruct,
      _batchAddress: AddressLike,
      _newBatchColl: BigNumberish,
      _newBatchDebt: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "onLowerBatchManagerAnnualFee"
  ): TypedContractMethod<
    [
      _batchAddress: AddressLike,
      _newColl: BigNumberish,
      _newDebt: BigNumberish,
      _newAnnualManagementFee: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "onOpenTrove"
  ): TypedContractMethod<
    [
      _owner: AddressLike,
      _troveId: BigNumberish,
      _troveChange: TroveChangeStruct,
      _annualInterestRate: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "onOpenTroveAndJoinBatch"
  ): TypedContractMethod<
    [
      _owner: AddressLike,
      _troveId: BigNumberish,
      _troveChange: TroveChangeStruct,
      _batchAddress: AddressLike,
      _batchColl: BigNumberish,
      _batchDebt: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "onRegisterBatchManager"
  ): TypedContractMethod<
    [
      _batchAddress: AddressLike,
      _annualInterestRate: BigNumberish,
      _annualFee: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "onRemoveFromBatch"
  ): TypedContractMethod<
    [
      _troveId: BigNumberish,
      _newTroveColl: BigNumberish,
      _newTroveDebt: BigNumberish,
      _troveChange: TroveChangeStruct,
      _batchAddress: AddressLike,
      _newBatchColl: BigNumberish,
      _newBatchDebt: BigNumberish,
      _newAnnualInterestRate: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "onSetBatchManagerAnnualInterestRate"
  ): TypedContractMethod<
    [
      _batchAddress: AddressLike,
      _newColl: BigNumberish,
      _newDebt: BigNumberish,
      _newAnnualInterestRate: BigNumberish,
      _upfrontFee: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "onSetInterestBatchManager"
  ): TypedContractMethod<
    [_params: ITroveManager.OnSetInterestBatchManagerParamsStruct],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "redeemCollateral"
  ): TypedContractMethod<
    [
      _sender: AddressLike,
      _boldAmount: BigNumberish,
      _price: BigNumberish,
      _redemptionRate: BigNumberish,
      _maxIterations: BigNumberish
    ],
    [bigint],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "rewardSnapshots"
  ): TypedContractMethod<
    [_id: BigNumberish],
    [[bigint, bigint] & { coll: bigint; boldDebt: bigint }],
    "view"
  >;
  getFunction(
    nameOrSignature: "setTroveStatusToActive"
  ): TypedContractMethod<[_troveId: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "shutdown"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "shutdownTime"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "sortedTroves"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "stabilityPool"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "troveNFT"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "urgentRedemption"
  ): TypedContractMethod<
    [
      _boldAmount: BigNumberish,
      _troveIds: BigNumberish[],
      _minCollateral: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  filters: {};
}
