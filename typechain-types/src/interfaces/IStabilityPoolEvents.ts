/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  FunctionFragment,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
} from "../../common";

export interface IStabilityPoolEventsInterface extends Interface {
  getEvent(
    nameOrSignatureOrTopic:
      | "B_Updated"
      | "DepositOperation"
      | "DepositUpdated"
      | "EpochUpdated"
      | "EtherSent"
      | "P_Updated"
      | "S_Updated"
      | "ScaleUpdated"
      | "StabilityPoolBoldBalanceUpdated"
      | "StabilityPoolCollBalanceUpdated"
  ): EventFragment;
}

export namespace B_UpdatedEvent {
  export type InputTuple = [
    _B: BigNumberish,
    _epoch: BigNumberish,
    _scale: BigNumberish
  ];
  export type OutputTuple = [_B: bigint, _epoch: bigint, _scale: bigint];
  export interface OutputObject {
    _B: bigint;
    _epoch: bigint;
    _scale: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DepositOperationEvent {
  export type InputTuple = [
    _depositor: AddressLike,
    _operation: BigNumberish,
    _depositLossSinceLastOperation: BigNumberish,
    _depositChange: BigNumberish,
    _yieldGainSinceLastOperation: BigNumberish,
    _yieldGainClaimed: BigNumberish,
    _ethGainSinceLastOperation: BigNumberish,
    _ethGainClaimed: BigNumberish
  ];
  export type OutputTuple = [
    _depositor: string,
    _operation: bigint,
    _depositLossSinceLastOperation: bigint,
    _depositChange: bigint,
    _yieldGainSinceLastOperation: bigint,
    _yieldGainClaimed: bigint,
    _ethGainSinceLastOperation: bigint,
    _ethGainClaimed: bigint
  ];
  export interface OutputObject {
    _depositor: string;
    _operation: bigint;
    _depositLossSinceLastOperation: bigint;
    _depositChange: bigint;
    _yieldGainSinceLastOperation: bigint;
    _yieldGainClaimed: bigint;
    _ethGainSinceLastOperation: bigint;
    _ethGainClaimed: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DepositUpdatedEvent {
  export type InputTuple = [
    _depositor: AddressLike,
    _newDeposit: BigNumberish,
    _stashedColl: BigNumberish,
    _snapshotP: BigNumberish,
    _snapshotS: BigNumberish,
    _snapshotB: BigNumberish,
    _snapshotScale: BigNumberish,
    _snapshotEpoch: BigNumberish
  ];
  export type OutputTuple = [
    _depositor: string,
    _newDeposit: bigint,
    _stashedColl: bigint,
    _snapshotP: bigint,
    _snapshotS: bigint,
    _snapshotB: bigint,
    _snapshotScale: bigint,
    _snapshotEpoch: bigint
  ];
  export interface OutputObject {
    _depositor: string;
    _newDeposit: bigint;
    _stashedColl: bigint;
    _snapshotP: bigint;
    _snapshotS: bigint;
    _snapshotB: bigint;
    _snapshotScale: bigint;
    _snapshotEpoch: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EpochUpdatedEvent {
  export type InputTuple = [_currentEpoch: BigNumberish];
  export type OutputTuple = [_currentEpoch: bigint];
  export interface OutputObject {
    _currentEpoch: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EtherSentEvent {
  export type InputTuple = [_to: AddressLike, _amount: BigNumberish];
  export type OutputTuple = [_to: string, _amount: bigint];
  export interface OutputObject {
    _to: string;
    _amount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace P_UpdatedEvent {
  export type InputTuple = [_P: BigNumberish];
  export type OutputTuple = [_P: bigint];
  export interface OutputObject {
    _P: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace S_UpdatedEvent {
  export type InputTuple = [
    _S: BigNumberish,
    _epoch: BigNumberish,
    _scale: BigNumberish
  ];
  export type OutputTuple = [_S: bigint, _epoch: bigint, _scale: bigint];
  export interface OutputObject {
    _S: bigint;
    _epoch: bigint;
    _scale: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ScaleUpdatedEvent {
  export type InputTuple = [_currentScale: BigNumberish];
  export type OutputTuple = [_currentScale: bigint];
  export interface OutputObject {
    _currentScale: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace StabilityPoolBoldBalanceUpdatedEvent {
  export type InputTuple = [_newBalance: BigNumberish];
  export type OutputTuple = [_newBalance: bigint];
  export interface OutputObject {
    _newBalance: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace StabilityPoolCollBalanceUpdatedEvent {
  export type InputTuple = [_newBalance: BigNumberish];
  export type OutputTuple = [_newBalance: bigint];
  export interface OutputObject {
    _newBalance: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface IStabilityPoolEvents extends BaseContract {
  connect(runner?: ContractRunner | null): IStabilityPoolEvents;
  waitForDeployment(): Promise<this>;

  interface: IStabilityPoolEventsInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getEvent(
    key: "B_Updated"
  ): TypedContractEvent<
    B_UpdatedEvent.InputTuple,
    B_UpdatedEvent.OutputTuple,
    B_UpdatedEvent.OutputObject
  >;
  getEvent(
    key: "DepositOperation"
  ): TypedContractEvent<
    DepositOperationEvent.InputTuple,
    DepositOperationEvent.OutputTuple,
    DepositOperationEvent.OutputObject
  >;
  getEvent(
    key: "DepositUpdated"
  ): TypedContractEvent<
    DepositUpdatedEvent.InputTuple,
    DepositUpdatedEvent.OutputTuple,
    DepositUpdatedEvent.OutputObject
  >;
  getEvent(
    key: "EpochUpdated"
  ): TypedContractEvent<
    EpochUpdatedEvent.InputTuple,
    EpochUpdatedEvent.OutputTuple,
    EpochUpdatedEvent.OutputObject
  >;
  getEvent(
    key: "EtherSent"
  ): TypedContractEvent<
    EtherSentEvent.InputTuple,
    EtherSentEvent.OutputTuple,
    EtherSentEvent.OutputObject
  >;
  getEvent(
    key: "P_Updated"
  ): TypedContractEvent<
    P_UpdatedEvent.InputTuple,
    P_UpdatedEvent.OutputTuple,
    P_UpdatedEvent.OutputObject
  >;
  getEvent(
    key: "S_Updated"
  ): TypedContractEvent<
    S_UpdatedEvent.InputTuple,
    S_UpdatedEvent.OutputTuple,
    S_UpdatedEvent.OutputObject
  >;
  getEvent(
    key: "ScaleUpdated"
  ): TypedContractEvent<
    ScaleUpdatedEvent.InputTuple,
    ScaleUpdatedEvent.OutputTuple,
    ScaleUpdatedEvent.OutputObject
  >;
  getEvent(
    key: "StabilityPoolBoldBalanceUpdated"
  ): TypedContractEvent<
    StabilityPoolBoldBalanceUpdatedEvent.InputTuple,
    StabilityPoolBoldBalanceUpdatedEvent.OutputTuple,
    StabilityPoolBoldBalanceUpdatedEvent.OutputObject
  >;
  getEvent(
    key: "StabilityPoolCollBalanceUpdated"
  ): TypedContractEvent<
    StabilityPoolCollBalanceUpdatedEvent.InputTuple,
    StabilityPoolCollBalanceUpdatedEvent.OutputTuple,
    StabilityPoolCollBalanceUpdatedEvent.OutputObject
  >;

  filters: {
    "B_Updated(uint256,uint128,uint128)": TypedContractEvent<
      B_UpdatedEvent.InputTuple,
      B_UpdatedEvent.OutputTuple,
      B_UpdatedEvent.OutputObject
    >;
    B_Updated: TypedContractEvent<
      B_UpdatedEvent.InputTuple,
      B_UpdatedEvent.OutputTuple,
      B_UpdatedEvent.OutputObject
    >;

    "DepositOperation(address,uint8,uint256,int256,uint256,uint256,uint256,uint256)": TypedContractEvent<
      DepositOperationEvent.InputTuple,
      DepositOperationEvent.OutputTuple,
      DepositOperationEvent.OutputObject
    >;
    DepositOperation: TypedContractEvent<
      DepositOperationEvent.InputTuple,
      DepositOperationEvent.OutputTuple,
      DepositOperationEvent.OutputObject
    >;

    "DepositUpdated(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": TypedContractEvent<
      DepositUpdatedEvent.InputTuple,
      DepositUpdatedEvent.OutputTuple,
      DepositUpdatedEvent.OutputObject
    >;
    DepositUpdated: TypedContractEvent<
      DepositUpdatedEvent.InputTuple,
      DepositUpdatedEvent.OutputTuple,
      DepositUpdatedEvent.OutputObject
    >;

    "EpochUpdated(uint128)": TypedContractEvent<
      EpochUpdatedEvent.InputTuple,
      EpochUpdatedEvent.OutputTuple,
      EpochUpdatedEvent.OutputObject
    >;
    EpochUpdated: TypedContractEvent<
      EpochUpdatedEvent.InputTuple,
      EpochUpdatedEvent.OutputTuple,
      EpochUpdatedEvent.OutputObject
    >;

    "EtherSent(address,uint256)": TypedContractEvent<
      EtherSentEvent.InputTuple,
      EtherSentEvent.OutputTuple,
      EtherSentEvent.OutputObject
    >;
    EtherSent: TypedContractEvent<
      EtherSentEvent.InputTuple,
      EtherSentEvent.OutputTuple,
      EtherSentEvent.OutputObject
    >;

    "P_Updated(uint256)": TypedContractEvent<
      P_UpdatedEvent.InputTuple,
      P_UpdatedEvent.OutputTuple,
      P_UpdatedEvent.OutputObject
    >;
    P_Updated: TypedContractEvent<
      P_UpdatedEvent.InputTuple,
      P_UpdatedEvent.OutputTuple,
      P_UpdatedEvent.OutputObject
    >;

    "S_Updated(uint256,uint128,uint128)": TypedContractEvent<
      S_UpdatedEvent.InputTuple,
      S_UpdatedEvent.OutputTuple,
      S_UpdatedEvent.OutputObject
    >;
    S_Updated: TypedContractEvent<
      S_UpdatedEvent.InputTuple,
      S_UpdatedEvent.OutputTuple,
      S_UpdatedEvent.OutputObject
    >;

    "ScaleUpdated(uint128)": TypedContractEvent<
      ScaleUpdatedEvent.InputTuple,
      ScaleUpdatedEvent.OutputTuple,
      ScaleUpdatedEvent.OutputObject
    >;
    ScaleUpdated: TypedContractEvent<
      ScaleUpdatedEvent.InputTuple,
      ScaleUpdatedEvent.OutputTuple,
      ScaleUpdatedEvent.OutputObject
    >;

    "StabilityPoolBoldBalanceUpdated(uint256)": TypedContractEvent<
      StabilityPoolBoldBalanceUpdatedEvent.InputTuple,
      StabilityPoolBoldBalanceUpdatedEvent.OutputTuple,
      StabilityPoolBoldBalanceUpdatedEvent.OutputObject
    >;
    StabilityPoolBoldBalanceUpdated: TypedContractEvent<
      StabilityPoolBoldBalanceUpdatedEvent.InputTuple,
      StabilityPoolBoldBalanceUpdatedEvent.OutputTuple,
      StabilityPoolBoldBalanceUpdatedEvent.OutputObject
    >;

    "StabilityPoolCollBalanceUpdated(uint256)": TypedContractEvent<
      StabilityPoolCollBalanceUpdatedEvent.InputTuple,
      StabilityPoolCollBalanceUpdatedEvent.OutputTuple,
      StabilityPoolCollBalanceUpdatedEvent.OutputObject
    >;
    StabilityPoolCollBalanceUpdated: TypedContractEvent<
      StabilityPoolCollBalanceUpdatedEvent.InputTuple,
      StabilityPoolCollBalanceUpdatedEvent.OutputTuple,
      StabilityPoolCollBalanceUpdatedEvent.OutputObject
    >;
  };
}
