/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AddressesRegistry,
  AddressesRegistryInterface,
} from "../../../src/liquity/AddressesRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_ccr",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_mcr",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_scr",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidationPenaltySP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidationPenaltyRedistribution",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidCCR",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMCR",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSCR",
    type: "error",
  },
  {
    inputs: [],
    name: "RedistPenaltyTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "SPPenaltyGtRedist",
    type: "error",
  },
  {
    inputs: [],
    name: "SPPenaltyTooLow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_activePoolAddress",
        type: "address",
      },
    ],
    name: "ActivePoolAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_boldTokenAddress",
        type: "address",
      },
    ],
    name: "BoldTokenAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_borrowerOperationsAddress",
        type: "address",
      },
    ],
    name: "BorrowerOperationsAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_collSurplusPoolAddress",
        type: "address",
      },
    ],
    name: "CollSurplusPoolAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_collTokenAddress",
        type: "address",
      },
    ],
    name: "CollTokenAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_collateralRegistryAddress",
        type: "address",
      },
    ],
    name: "CollateralRegistryAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_defaultPoolAddress",
        type: "address",
      },
    ],
    name: "DefaultPoolAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_gasPoolAddress",
        type: "address",
      },
    ],
    name: "GasPoolAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_hintHelpersAddress",
        type: "address",
      },
    ],
    name: "HintHelpersAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_interestRouterAddress",
        type: "address",
      },
    ],
    name: "InterestRouterAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_metadataNFTAddress",
        type: "address",
      },
    ],
    name: "MetadataNFTAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_multiTroveGetterAddress",
        type: "address",
      },
    ],
    name: "MultiTroveGetterAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_priceFeedAddress",
        type: "address",
      },
    ],
    name: "PriceFeedAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sortedTrovesAddress",
        type: "address",
      },
    ],
    name: "SortedTrovesAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_stabilityPoolAddress",
        type: "address",
      },
    ],
    name: "StabilityPoolAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_troveManagerAddress",
        type: "address",
      },
    ],
    name: "TroveManagerAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_troveNFTAddress",
        type: "address",
      },
    ],
    name: "TroveNFTAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_wethAddress",
        type: "address",
      },
    ],
    name: "WETHAddressChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "CCR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIQUIDATION_PENALTY_REDISTRIBUTION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIQUIDATION_PENALTY_SP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MCR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SCR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activePool",
    outputs: [
      {
        internalType: "contract IActivePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "boldToken",
    outputs: [
      {
        internalType: "contract IBoldToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowerOperations",
    outputs: [
      {
        internalType: "contract IBorrowerOperations",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collSurplusPool",
    outputs: [
      {
        internalType: "contract ICollSurplusPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collToken",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralRegistry",
    outputs: [
      {
        internalType: "contract ICollateralRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultPool",
    outputs: [
      {
        internalType: "contract IDefaultPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasPoolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hintHelpers",
    outputs: [
      {
        internalType: "contract IHintHelpers",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interestRouter",
    outputs: [
      {
        internalType: "contract IInterestRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataNFT",
    outputs: [
      {
        internalType: "contract IMetadataNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multiTroveGetter",
    outputs: [
      {
        internalType: "contract IMultiTroveGetter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "contract IPriceFeed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20Metadata",
            name: "collToken",
            type: "address",
          },
          {
            internalType: "contract IBorrowerOperations",
            name: "borrowerOperations",
            type: "address",
          },
          {
            internalType: "contract ITroveManager",
            name: "troveManager",
            type: "address",
          },
          {
            internalType: "contract ITroveNFT",
            name: "troveNFT",
            type: "address",
          },
          {
            internalType: "contract IMetadataNFT",
            name: "metadataNFT",
            type: "address",
          },
          {
            internalType: "contract IStabilityPool",
            name: "stabilityPool",
            type: "address",
          },
          {
            internalType: "contract IPriceFeed",
            name: "priceFeed",
            type: "address",
          },
          {
            internalType: "contract IActivePool",
            name: "activePool",
            type: "address",
          },
          {
            internalType: "contract IDefaultPool",
            name: "defaultPool",
            type: "address",
          },
          {
            internalType: "address",
            name: "gasPoolAddress",
            type: "address",
          },
          {
            internalType: "contract ICollSurplusPool",
            name: "collSurplusPool",
            type: "address",
          },
          {
            internalType: "contract ISortedTroves",
            name: "sortedTroves",
            type: "address",
          },
          {
            internalType: "contract IInterestRouter",
            name: "interestRouter",
            type: "address",
          },
          {
            internalType: "contract IHintHelpers",
            name: "hintHelpers",
            type: "address",
          },
          {
            internalType: "contract IMultiTroveGetter",
            name: "multiTroveGetter",
            type: "address",
          },
          {
            internalType: "contract ICollateralRegistry",
            name: "collateralRegistry",
            type: "address",
          },
          {
            internalType: "contract IBoldToken",
            name: "boldToken",
            type: "address",
          },
          {
            internalType: "contract IWETH",
            name: "WETH",
            type: "address",
          },
        ],
        internalType: "struct IAddressesRegistry.AddressVars",
        name: "_vars",
        type: "tuple",
      },
    ],
    name: "setAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sortedTroves",
    outputs: [
      {
        internalType: "contract ISortedTroves",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stabilityPool",
    outputs: [
      {
        internalType: "contract IStabilityPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "troveManager",
    outputs: [
      {
        internalType: "contract ITroveManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "troveNFT",
    outputs: [
      {
        internalType: "contract ITroveNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61012060405234801561001157600080fd5b50604051610f44380380610f44833981016040819052610030916101c1565b600080546001600160a01b0319166001600160a01b03881690811782556040518892907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350670de0b6b3a7640000851115806100985750671bc16d674ec800008510155b156100b657604051630be2b0f560e31b815260040160405180910390fd5b670de0b6b3a7640000841115806100d55750671bc16d674ec800008410155b156100f357604051635e77ff2d60e11b815260040160405180910390fd5b670de0b6b3a7640000831115806101125750671bc16d674ec800008310155b1561013057604051632571cf3560e01b815260040160405180910390fd5b66b1a2bc2ec5000082101561015857604051631ca529cf60e21b815260040160405180910390fd5b8082111561017957604051630282208d60e31b815260040160405180910390fd5b67016345785d8a00008111156101a257604051630ac9628360e41b815260040160405180910390fd5b60809490945260a09190915260c09190915260e0526101005250610220565b60008060008060008060c087890312156101da57600080fd5b86516001600160a01b03811681146101f157600080fd5b6020880151604089015160608a015160808b015160a0909b0151939c929b509099909850965090945092505050565b60805160a05160c05160e05161010051610ce061026460003960006102100152600061026b01526000610352015260006102df015260006102b80152610ce06000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c806377553ad4116100ee578063ad5c464811610097578063d0ee2ace11610071578063d0ee2ace146103ef578063d330fadd14610402578063ee3ca8ad14610415578063fe9d03231461042857600080fd5b8063ad5c4648146103b6578063ae918754146103c9578063cda775f9146103dc57600080fd5b80637f7dde4a116100c85780637f7dde4a146103745780638da5cb5b146103875780638f32d59b1461039857600080fd5b806377553ad41461032757806378bef5ce1461033a578063794e57241461034d57600080fd5b8063370619be1161015b5780635733d58f116101355780635733d58f146102b357806358d5a961146102da578063630afce514610301578063741bef1a1461031457600080fd5b8063370619be146102665780633cc742251461028d5780633d83908a146102a057600080fd5b80631170f2d41161018c5780631170f2d41461020b5780631ff75dc61461024057806331b8c9461461025357600080fd5b8063048c661d146101b3578063059e0113146101e3578063105fd803146101f6575b600080fd5b6006546101c6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6004546101c6906001600160a01b031681565b610209610204366004610b7b565b61043b565b005b6102327f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016101da565b600f546101c6906001600160a01b031681565b6001546101c6906001600160a01b031681565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b6009546101c6906001600160a01b031681565b6003546101c6906001600160a01b031681565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b6011546101c6906001600160a01b031681565b6007546101c6906001600160a01b031681565b6002546101c6906001600160a01b031681565b600e546101c6906001600160a01b031681565b6102327f000000000000000000000000000000000000000000000000000000000000000081565b6008546101c6906001600160a01b031681565b6000546001600160a01b03166101c6565b6000546001600160a01b0316331460405190151581526020016101da565b6012546101c6906001600160a01b031681565b600c546101c6906001600160a01b031681565b600b546101c6906001600160a01b031681565b600d546101c6906001600160a01b031681565b6010546101c6906001600160a01b031681565b6005546101c6906001600160a01b031681565b600a546101c6906001600160a01b031681565b6000546001600160a01b031633146104995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b80516001805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b039384169081179092556020808501516002805484169186169190911790556040808601516003805485169187169190911790556060860151600480548516918716919091179055608086015160058054851691871691909117905560a086015160068054851691871691909117905560c086015160078054851691871691909117905560e0860151600880548516918716919091179055610100860151600980548516918716919091179055610120860151600a80548516918716919091179055610140860151600b80548516918716919091179055610160860151600c80548516918716919091179055610180860151600d805485169187169190911790556101a0860151600e805485169187169190911790556101c0860151600f805485169187169190911790556101e08601516010805485169187169190911790556102008601516011805485169187169190911790556102208601516012805490941695169490941790915591519081527f8adeca1d26ce63eb9fb5b9362155b69fbb631209bfc0dddb3d75d96735eae23b910160405180910390a16020808201516040516001600160a01b0390911681527f3ca631ffcd2a9b5d9ae18543fc82f58eb4ca33af9e6ab01b7a8e95331e6ed985910160405180910390a160408082015190516001600160a01b0390911681527f143219c9e69b09e07e095fcc889b43d8f46ca892bba65f08dc3a0050869a56789060200160405180910390a160608101516040516001600160a01b0390911681527f39b3d3f08f5292d52497444fc183b3915a339c0b41fb021bf52ae59505e455b29060200160405180910390a160808101516040516001600160a01b0390911681527f2e25b5debf2df0b7ce686a3657c903a3494b26d9e8c56c3a7c2673a1e0f9a36d9060200160405180910390a160a08101516040516001600160a01b0390911681527f82966d27eea39b038ee0fa30cd16532bb24f6e65d31cb58fb227aa5766cdcc7f9060200160405180910390a160c08101516040516001600160a01b0390911681527f8c537274438aa850a330284665d81a85dd38267d09e4050d416bfc94142db2649060200160405180910390a160e08101516040516001600160a01b0390911681527f78f058b189175430c48dc02699e3a0031ea4ff781536dc2fab847de4babdd8829060200160405180910390a16101008101516040516001600160a01b0390911681527f5ee0cae2f063ed938bb55046f6a932fb6ae792bf43624806bb90abe68a50be9b9060200160405180910390a16101208101516040516001600160a01b0390911681527fcfb07d791fcafc032b35837b50eb84b74df518cf4cc287e8084f47630fa70fa09060200160405180910390a16101408101516040516001600160a01b0390911681527fe67f36a6e961157d6eff83b91f3af5a62131ceb6f04954ef74f51c1c05e7f88d9060200160405180910390a16101608101516040516001600160a01b0390911681527f65f4cf077bc01e4742eb5ad98326f6e95b63548ea24b17f8d5e823111fe788009060200160405180910390a16101808101516040516001600160a01b0390911681527f8ffe6101362adf6b16b991354388952ee29b64ef79df72e5a8f462aaf5ba82c69060200160405180910390a16101a08101516040516001600160a01b0390911681527f0ed6a80cb5510631aee6ec2b0b42d221ee9e9f597444f323a45873cb8b5c20609060200160405180910390a16101c08101516040516001600160a01b0390911681527f2c2fcbabcea3a8c982fdb5bfa2f9de86a49f7a2704a8bed9fa11e797999e75219060200160405180910390a16101e08101516040516001600160a01b0390911681527f4f8a3037ce0d3c62ab7c79fec792f6db7216b27b94e09faf499753381c33f8479060200160405180910390a16102008101516040516001600160a01b0390911681527f28fe9b1bb8b27b863bb5635cb5bbd4e1beb7af490191ba03efe587680895b4fd9060200160405180910390a16102208101516040516001600160a01b0390911681527f11aa378dbfc7a798b12894ab0597d9ff2ea236d7ed0f7c7231e9dbb18da1badb9060200160405180910390a1610acd610ad0565b50565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b604051610240810167ffffffffffffffff81118282101715610b5957634e487b7160e01b600052604160045260246000fd5b60405290565b80356001600160a01b0381168114610b7657600080fd5b919050565b60006102408284031215610b8e57600080fd5b610b96610b27565b610b9f83610b5f565b8152610bad60208401610b5f565b6020820152610bbe60408401610b5f565b6040820152610bcf60608401610b5f565b6060820152610be060808401610b5f565b6080820152610bf160a08401610b5f565b60a0820152610c0260c08401610b5f565b60c0820152610c1360e08401610b5f565b60e0820152610100610c26818501610b5f565b90820152610120610c38848201610b5f565b90820152610140610c4a848201610b5f565b90820152610160610c5c848201610b5f565b90820152610180610c6e848201610b5f565b908201526101a0610c80848201610b5f565b908201526101c0610c92848201610b5f565b908201526101e0610ca4848201610b5f565b90820152610200610cb6848201610b5f565b90820152610220610cc8848201610b5f565b90820152939250505056fea164736f6c6343000814000a";

type AddressesRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressesRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressesRegistry__factory extends ContractFactory {
  constructor(...args: AddressesRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    _ccr: BigNumberish,
    _mcr: BigNumberish,
    _scr: BigNumberish,
    _liquidationPenaltySP: BigNumberish,
    _liquidationPenaltyRedistribution: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _owner,
      _ccr,
      _mcr,
      _scr,
      _liquidationPenaltySP,
      _liquidationPenaltyRedistribution,
      overrides || {}
    );
  }
  override deploy(
    _owner: AddressLike,
    _ccr: BigNumberish,
    _mcr: BigNumberish,
    _scr: BigNumberish,
    _liquidationPenaltySP: BigNumberish,
    _liquidationPenaltyRedistribution: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _owner,
      _ccr,
      _mcr,
      _scr,
      _liquidationPenaltySP,
      _liquidationPenaltyRedistribution,
      overrides || {}
    ) as Promise<
      AddressesRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AddressesRegistry__factory {
    return super.connect(runner) as AddressesRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressesRegistryInterface {
    return new Interface(_abi) as AddressesRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AddressesRegistry {
    return new Contract(address, _abi, runner) as unknown as AddressesRegistry;
  }
}
