/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICommunityIssuance,
  ICommunityIssuanceInterface,
} from "../../../src/interfaces/ICommunityIssuance";

const _abi = [
  {
    inputs: [],
    name: "issueLQTY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_LQTYamount",
        type: "uint256",
      },
    ],
    name: "sendLQTY",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lqtyTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stabilityPoolAddress",
        type: "address",
      },
    ],
    name: "setAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICommunityIssuance__factory {
  static readonly abi = _abi;
  static createInterface(): ICommunityIssuanceInterface {
    return new Interface(_abi) as ICommunityIssuanceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ICommunityIssuance {
    return new Contract(address, _abi, runner) as unknown as ICommunityIssuance;
  }
}
