/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISortedTroves,
  ISortedTrovesInterface,
} from "../../../src/interfaces/ISortedTroves";

const _abi = [
  {
    inputs: [
      {
        internalType: "BatchId",
        name: "_id",
        type: "address",
      },
    ],
    name: "batches",
    outputs: [
      {
        internalType: "uint256",
        name: "head",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tail",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowerOperationsAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_annualInterestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_prevId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nextId",
        type: "uint256",
      },
    ],
    name: "findInsertPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFirst",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getNext",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getPrev",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_annualInterestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_prevId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nextId",
        type: "uint256",
      },
    ],
    name: "insert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_troveId",
        type: "uint256",
      },
      {
        internalType: "BatchId",
        name: "_batchId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_annualInterestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_prevId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nextId",
        type: "uint256",
      },
    ],
    name: "insertIntoBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "isBatchedNode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isEmpty",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "BatchId",
        name: "_id",
        type: "address",
      },
    ],
    name: "isEmptyBatch",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "nodes",
    outputs: [
      {
        internalType: "uint256",
        name: "nextId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prevId",
        type: "uint256",
      },
      {
        internalType: "BatchId",
        name: "batchId",
        type: "address",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newAnnualInterestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_prevId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nextId",
        type: "uint256",
      },
    ],
    name: "reInsert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "BatchId",
        name: "_id",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_newAnnualInterestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_prevId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nextId",
        type: "uint256",
      },
    ],
    name: "reInsertBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "removeFromBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "size",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "troveManager",
    outputs: [
      {
        internalType: "contract ITroveManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_annualInterestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_prevId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nextId",
        type: "uint256",
      },
    ],
    name: "validInsertPosition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ISortedTroves__factory {
  static readonly abi = _abi;
  static createInterface(): ISortedTrovesInterface {
    return new Interface(_abi) as ISortedTrovesInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISortedTroves {
    return new Contract(address, _abi, runner) as unknown as ISortedTroves;
  }
}
