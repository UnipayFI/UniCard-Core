/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LiquityBase,
  LiquityBaseInterface,
} from "../../../src/dependencies/LiquityBase";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressesRegistry",
        name: "_addressesRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newActivePoolAddress",
        type: "address",
      },
    ],
    name: "ActivePoolAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newDefaultPoolAddress",
        type: "address",
      },
    ],
    name: "DefaultPoolAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newPriceFeedAddress",
        type: "address",
      },
    ],
    name: "PriceFeedAddressChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "activePool",
    outputs: [
      {
        internalType: "contract IActivePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntireSystemColl",
    outputs: [
      {
        internalType: "uint256",
        name: "entireSystemColl",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntireSystemDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "entireSystemDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161056638038061056683398101604081905261002f91610291565b806001600160a01b0316637f7dde4a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561006d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100919190610291565b6000806101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b0316633cc742256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101189190610291565b600160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b031663741bef1a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561017c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a09190610291565b600280546001600160a01b0319166001600160a01b03928316179055600054604051911681527f78f058b189175430c48dc02699e3a0031ea4ff781536dc2fab847de4babdd8829060200160405180910390a16001546040516001600160a01b0390911681527f5ee0cae2f063ed938bb55046f6a932fb6ae792bf43624806bb90abe68a50be9b9060200160405180910390a16002546040516001600160a01b0390911681527f8c537274438aa850a330284665d81a85dd38267d09e4050d416bfc94142db2649060200160405180910390a1506102b5565b6001600160a01b038116811461028e57600080fd5b50565b6000602082840312156102a357600080fd5b81516102ae81610279565b9392505050565b6102a2806102c46000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063795d26c3146100465780637f7dde4a14610061578063887105d31461008c575b600080fd5b61004e610094565b6040519081526020015b60405180910390f35b600054610074906001600160a01b031681565b6040516001600160a01b039091168152602001610058565b61004e610190565b60008054604080516308aa0f3360e31b8152905183926001600160a01b03169163455079989160048083019260209291908290030181865afa1580156100de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101029190610255565b90506000600160009054906101000a90046001600160a01b03166001600160a01b031663455079986040518163ffffffff1660e01b8152600401602060405180830381865afa158015610159573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017d9190610255565b9050610189818361026e565b9250505090565b60008054604080516301b3d98160e11b8152905183926001600160a01b031691630367b3029160048083019260209291908290030181865afa1580156101da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fe9190610255565b90506000600160009054906101000a90046001600160a01b03166001600160a01b0316630367b3026040518163ffffffff1660e01b8152600401602060405180830381865afa158015610159573d6000803e3d6000fd5b60006020828403121561026757600080fd5b5051919050565b8082018082111561028f57634e487b7160e01b600052601160045260246000fd5b9291505056fea164736f6c6343000814000a";

type LiquityBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquityBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquityBase__factory extends ContractFactory {
  constructor(...args: LiquityBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _addressesRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_addressesRegistry, overrides || {});
  }
  override deploy(
    _addressesRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_addressesRegistry, overrides || {}) as Promise<
      LiquityBase & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LiquityBase__factory {
    return super.connect(runner) as LiquityBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquityBaseInterface {
    return new Interface(_abi) as LiquityBaseInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LiquityBase {
    return new Contract(address, _abi, runner) as unknown as LiquityBase;
  }
}
